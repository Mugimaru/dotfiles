[color]
  branch = auto
  diff = auto
  interactive = auto
  status = auto
  ui = auto
  pager = true

[merge]
  summary=true

[alias]
  b = branch -v
  r = remote -v
  t = tag -l
  cp = cherry-pick -x
  co = checkout
  br = branch
  ci = commit
  st = status -sb
  ds = diff --staged
  amend = commit --amend -C HEAD
  undo = reset --soft HEAD^
  unstage = reset HEAD --
  uncommit = reset --soft HEAD^
  last = log -1 HEAD
  up = pull --rebase
  put = push origin HEAD
  latest = for-each-ref --sort=-committerdate --format='%(committerdate:short) %(refname:short) [%(committername)]'
  ls = log  --decorate --date=short
  lg = log --pretty=format:\"%h %Cblue%ar %Cgreen%an%Creset: %Cred%d\"
  lf = log --name-status --pretty=format:\"%h %Cblue%ar %Cgreen%an%Creset: %s %Cred%d\"
  ll = log -10 --pretty=format:\"%h %Cblue%ar %Cgreen%an%Creset: %s %Cred%d\"
  gr = log --graph --pretty=format:\"%Cred%h %Cblue%ar%Creset %Cgreen%an%Creset %s %Cred%d\"
  graph = log --graph --pretty=format':%C(yellow)%h%Cblue%d%Creset %s %C(white) %an, %ar%Creset'
  lb = for-each-ref --count=10 --sort=-committerdate refs/heads/ --format='%(refname:short)'
  fu = !"git branch --set-upstream-to=origin/\"$(git rev-parse --abbrev-ref HEAD)\""
	change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f"
[user]
  name = babushkin.ns
	email = nbabushkin@ptsecurity.com
	signingkey = 0xBE1312F8
[core]
  editor = vim
  excludesfile = ~/.gitignore
[merge]
	tool = vscode
[mergetool "vscode"]
	cmd = code --wait $MERGED
[diff]
	tool = vscode
[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
[http "https://pkg.re"]
	followRedirects = true
[url "git@gitlab.sbmt.io:"]
	insteadOf = https://gitlab.sbmt.io
[commit]
	gpgsign = true
[gpg]
	format = x509
